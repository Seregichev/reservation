# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-10-13 23:17
from __future__ import unicode_literals

import colorfield.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0020_old_tree_cleanup'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HelloPluginSetting',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='reserv_calendar_date_hellopluginsetting', serialize=False, to='cms.CMSPlugin')),
                ('welcome', models.CharField(blank=True, max_length=128, null=True, verbose_name='Welcome')),
                ('afterword', models.TextField(blank=True, max_length=256, null=True, verbose_name='Afterword')),
                ('unnamed_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Name of visitor')),
                ('tag_class', models.CharField(blank=True, max_length=256, null=True, verbose_name='HTML class')),
                ('tag_style', models.CharField(blank=True, max_length=256, null=True, verbose_name='HTML class')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='Start time for the reservation', verbose_name='Start time')),
                ('end_time', models.DateTimeField(help_text='End time for the reservation', verbose_name='End time')),
                ('duration_time', models.DurationField(blank=True, default=None, help_text='Field with auto filling', null=True, verbose_name='Duration')),
                ('product', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Product')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=64, verbose_name='Price')),
                ('comment', models.TextField(blank=True, default=None, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('client', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reserv_client', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserv_master', to=settings.AUTH_USER_MODEL, verbose_name='Master')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
            },
        ),
        migrations.CreateModel(
            name='ReserveCalendarTimePluginSetting',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='reserv_calendar_date_reservecalendartimepluginsetting', serialize=False, to='cms.CMSPlugin')),
                ('text_before_calendars', models.CharField(blank=True, default='1. Select a free day of the month', max_length=256, null=True, verbose_name='Text before calendars')),
                ('text_before_time_intervals', models.CharField(blank=True, default='2. Choose a free time', max_length=256, null=True, verbose_name='Text before time intervals')),
                ('text_style', models.CharField(blank=True, default='margin: 1em;', max_length=256, null=True, verbose_name='HTML text style')),
                ('num_of_month', models.IntegerField(blank=True, default=3, null=True, verbose_name='Number of months to show')),
                ('show_weeks_number', models.BooleanField(default=False, verbose_name='Show number of weeks')),
                ('show_year', models.BooleanField(default=True, verbose_name='Show year')),
                ('allow_choose_several_days', models.BooleanField(default=False, verbose_name='Allow choose several days')),
                ('busy_time_color', colorfield.fields.ColorField(blank=True, default='#dc3545', max_length=18, null=True, verbose_name='Color busy time sell')),
                ('free_time_color', colorfield.fields.ColorField(blank=True, default='#28a745', max_length=18, null=True, verbose_name='Color free time sell')),
                ('start_time', models.TimeField(default='8:00:00', verbose_name='Start time')),
                ('end_time', models.TimeField(default='17:00:00', verbose_name='End time')),
                ('time_delta', models.DurationField(choices=[(datetime.timedelta(0, 900), '15 minutes'), (datetime.timedelta(0, 1800), '30 minutes'), (datetime.timedelta(0, 2700), '45 minutes'), (datetime.timedelta(0, 3600), '1 hour'), (datetime.timedelta(0, 7200), '2 hours'), (datetime.timedelta(0, 10800), '3 hours'), (datetime.timedelta(0, 14400), '4 hours'), (datetime.timedelta(0, 18000), '5 hours'), (datetime.timedelta(0, 21600), '6 hours'), (datetime.timedelta(0, 25200), '7 hours'), (datetime.timedelta(0, 28800), '8 hours'), (datetime.timedelta(0, 32400), '9 hours'), (datetime.timedelta(0, 36000), '10 hours'), (datetime.timedelta(0, 39600), '11 hours'), (datetime.timedelta(0, 43200), '12 hours'), (datetime.timedelta(1), '1 day')], default=datetime.timedelta(0, 3600), verbose_name='Time Delta')),
                ('tag_class', models.CharField(blank=True, default='', max_length=256, null=True, verbose_name='HTML class')),
                ('tag_style', models.CharField(blank=True, default='', max_length=256, null=True, verbose_name='HTML style')),
                ('masters', models.ManyToManyField(related_name='reserv_masters_plugin', to=settings.AUTH_USER_MODEL, verbose_name='Choice masters:')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
    ]
